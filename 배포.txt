<프로젝트 배포 방법>
1. aws console 사이트를 들어가서 가입후 들어간다.

2. 검색창에 IAM (AWS 리소스에 접근하는 권한을 관리해주는 서비스)
를 검색하여 역할 -> 역할 생성을 누른다.

3. 신뢰할 수 있는 엔티티 유형에는 [AWS 서비스]를 선택후
사용 사례 항목은 EC2로 선택하고 다음버튼을 누른다.

4. 권한 검색하는곳에 
- AWSElasticBeanstalkMulticontainerDocker
- AWSElasticBeanstalkWebTier
- AWSElasticBeanstalkWorkerTier
검색하고 체크하여 다음버튼을 누른다.

5. 검색창에 Elastic Beanstalk를 검색하고 이동한다.
환경 -> 환경 생성을 누른다음 '환경 구성' 화면이 나타나면
- 애플리케이션 이름 : springboot-developler
- 플랫폼 : java(Correto 17) (환경에 맞는 언어)
- 플랫폼 브랜치 : Corretto 17 running on 64bit Amazon Linux 2023
을 순서대로 입력해준뒤 다음 버튼을 누른다.


6. 서비스 엑세스 구성은 
- 서비스 역할 : 새 서비스 역할 생성 및 사용
- 서비스 역할 이름 : aws-elasticbeanstalk-service-role4
- EC2 인스턴스 프로파일 : aws-elasticbeanstalk-ec2-role2 (방금전에 만든 IAM을 넣어주면 됌)
등을 입력 해주고 다음 버튼을 누른다.

7. 왼쪽 창에 4단계를 눌러서 넘어간뒤 
<루트볼륨> 까지 스크롤 하여 
루트볼륨 유형 : 범용 3(SSD) 로 바꾸어준뒤 
스크롤을 쭉 내려서 <검토단계로 건너뛰기> 를 누른뒤
맨 아래 제출 버튼을 누르고 마무리 한다.

8. 생성 요청한 웹 앱이 사용할 수 있기 까지 대기시간이 소요된다.

9. 프로젝트 생성이 완료가 되면 화면이 전환되는데
왼쪽에 [환경탭] 혹은 검색창에 elasticbeanstalk를 검색하여 
환경탭 -> 일래스틱 빈스토그 환경 목록을 확인한다.

10. 환경 목록에 방금 우리가 생성한 프로젝트 상태가 OK로 보이는지 체크 하고
해당 환경이름 URL을 클릭해서 도메인에 접속이 잘되는지 확인해준다.
(Congratulations이 나온다면 성공)

11. elasticbeanstalk에서 RDS 생성하기
- elasticbeanstalk검색 -> 환경 -> (만든 프로젝트)구성에 네트워킹 및 데이터베이스에서 
편집 버튼 클릭
- 스크롤을 아래로 내려 <데이터베이스 설정> 에서
  엔진 : mysql
  엔진 버전 : 8.0.33
  인스턴스 클래스 : db.t3.micro
  사용자 이름 : (사용할 id)
  암호 : (8글자로 입력)

12. 데이터베이스가 얼마나 생성되었는지 상태 확인을 위해 
검색창에 RDS를 검색하고 데이터베이스로 들어간다.
상태가 아직까지 생성중이라면 기다렸다가 완료가 되면
DB식별자 링크로 들어가 생성된 데이터베이스의 정보를 확인할 수 있다.
<<특히 엔드 포인트 정보는 RDS로 연결할때 사용하기 때문에 미리 복사해두자.>>

13. 데이터베이스를 만든 후 애플리케이션도 생성한 데이터베이스를 사용하도록 변경하기
elasticbeanstalk을 검색 -> 환경 -> 구성을 누르고 
업데이트 로깅쪽에서 편집 버튼을 클릭해 데이터베이스 정보를 다음과 같이 입력한다.

	이름				값
SPRING_DATASOURCE_URL		jdbc:mysql://엔드포인트입력/todo
SPRING_DATASOURCE_USERNAME	RDS생성할 때 썼던 아이디
SPRING_DATASOURCE_PASSWORD	RDS생성할 때 썼던 비밀번호

를 환경 속성추가해주고 적용 버튼을 눌러 마무리한다.

14. 로컬에서 RDS 연결하기
지금까지 사용하던 H2대신에 AWS의 RDS를 사용해보자
(로컬에서 동작하는 H2와 달리 RDS는 클라우드 위에 띄워져 있기 때문에 로컬에서 접속하려면 몇가지 설정을 해줘야 한다.)
RDS의 데이터 베이스로 이동 -> DB식별자 클릭 -> 보안그룹
보

15. 인바운드 규칙 설정
인바운드 규칙 칸에서 인바운드 규칙편집 버튼을 클릭하고 규칙을 추가해준다.
유형 : MYSQL/Aurora
소스 : 내IP
를 선택하고 저장 (이 작업을 하면 로컬에서 elasticbeanstalk 데이터 베이스에 접근할 수 있다.)

16. 해당 프로젝트의 src/main/resources 안에
'application.yml' 을 만들고 

server:
  port: 5000
spring:
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://본인엔드포인트:3306/ebdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: 설정한 아이디
    password: 설정한 비밀번호

위에 코드를 복사해 준다.
※ 위에 코드 중에 본인 엔드포인트와 아이디 비밀번호를 입력해주어야 한다.









db 엔드포인터

awseb-e-y95teq7gp3-stack-awsebrdsdatabase-qvrzqtj9utel.cjm2q242kddo.ap-northeast-2.rds.amazonaws.com